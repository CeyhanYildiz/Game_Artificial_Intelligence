#include <iostream>

#include <vector>
#include <string>

using namespace std;

/* Idee for a maze

 Samy :
â¬›â¬›â¬›â¬›â¬›â¬›â¬›
â¬›ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦â¬›
â¬›ğŸŸ¦â¬›â¬›â¬›ğŸŸ©â¬›
â¬›ğŸŸ¦ğŸŸ¦ğŸŸ¦â¬›â¬›â¬›
â¬›â¬œâ¬›ğŸŸ¦ğŸŸ¦ğŸŸ¥â¬›
â¬›â¬›â¬›â¬›â¬›â¬›â¬›

â¬œ = Path
â¬› = Wall

Ceyhan:


â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›        â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›
â¬›ğŸŸ©ğŸŸ©â¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›        â¬›ğŸŸ©ğŸŸ©ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨â¬›
â¬›ğŸŸ©ğŸŸ©â¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›        â¬›ğŸŸ©ğŸŸ©ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨â¬›
â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›        â¬›â¬›â¬›â¬›ğŸŸ¦ğŸŸ¦â¬›â¬›â¬›â¬›â¬›â¬›â¬›
â¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›        â¬›ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦â¬›
â¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›        â¬›ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦â¬›
â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›        â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›ğŸŸ¦ğŸŸ¦â¬›
â¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›        â¬›ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦â¬›
â¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›        â¬›ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦â¬›
â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›        â¬›ğŸŸ¨ğŸŸ¨â¬›â¬›â¬›â¬›ğŸŸ¦ğŸŸ¦â¬›â¬›â¬›â¬›
â¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›ğŸŸ¥ğŸŸ¥â¬›        â¬›ğŸŸ¨ğŸŸ¨â¬›â¬œâ¬œâ¬œğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¥ğŸŸ¥â¬›
â¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›â¬œâ¬œâ¬›ğŸŸ¥ğŸŸ¥â¬›        â¬›ğŸŸ¨ğŸŸ¨â¬›â¬œâ¬œâ¬œğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¥ğŸŸ¥â¬›
â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›        â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›â¬›

â¬œ = Path         = P
â¬› = Wall         = W
ğŸŸ¦ = Correct Path = C
ğŸŸ© = Start        = S 
ğŸŸ¥ = End          = E
ğŸŸ¨ = Wrong Path   = w
*/




void printBlockSymbol(char value);

int main()
{
    
    // 8 x 8 playable maze
    int count = 25;
    cout << endl;
    for (int x = 0; x < count; x++)
    {
        for (int i = 0; i < count; i++) {
            if (i % 3 == 0 || x % 3 == 0) {
                printBlockSymbol('W'); // Print 'W' for every third element (0, 3, 6, 9, ...)
            } else {
                printBlockSymbol('P'); // Print 'P' for all other elements
            }
        }
        cout << endl;
    }    
    cout << endl;

     
    return 0;
}


void printBlockSymbol(char value) {
    switch (value) {
        case 'P': cout << "â¬œ"; break;
        case 'W': cout << "â¬›"; break;
        case 'C': cout << "ğŸŸ¦"; break;
        case 'S': cout << "ğŸŸ©"; break;
        case 'E': cout << "ğŸŸ¥"; break;
        case 'w': cout << "ğŸŸ¨"; break;
        default:
            cout << "Invalid value\n";
    }
}